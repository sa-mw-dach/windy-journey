apiVersion: batch/v1
kind: Job
metadata:
  name: create-windy-journey-frontend-cm
  labels:
    app.kubernetes.io/part-of: windy-journey
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/sync-wave: "1"
spec:
  selector: {}
  template:
    spec:
      containers:
        - args:
            - -ec
            - |-
              API_URL=https://$(oc get route/windy-journey-backend -o jsonpath={.spec.host})

              cat << EOF | oc apply -f-
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: windy-journey-ui-config
                labels:
                  app: windy-journey-ui
                  app.kubernetes.io/part-of: windy-journey
              data:
                config: >-
                  BRAND_NAME=Windy Journey - Visual Inspection
                  API_URL=${API_URL}
              EOF

              oc delete pods -l app=windy-journey-ui
          command:
            - /bin/bash
          image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
          imagePullPolicy: IfNotPresent
          name: create-windy-journey-frontend-cm
      initContainers:
        - args:
            - -ec
            - |-
              echo -n 'Waiting for ui backend route'
              while ! oc get route windy-journey-backend 2>/dev/null | grep -qF windy-journey-backend; do
              echo -n .
              sleep 5
              done; echo
          command:
            - /bin/bash
          image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
          imagePullPolicy: IfNotPresent
          name: wait-for-windy-journey-backend-route
      restartPolicy: Never
      serviceAccount: demo-setup
      serviceAccountName: demo-setup